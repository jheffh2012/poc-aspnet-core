// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using poc.AspNet.Core.Ioc.EntityFramework.Context;

namespace poc.AspNet.Core.Ioc.EntityFramework.Migrations
{
    [DbContext(typeof(SqlServerDBContext))]
    [Migration("20210704171330_Migratio Init")]
    partial class MigratioInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("poc.AspNet.Core.Ioc.Entities.Calendario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdEquipe")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdEquipe");

                    b.ToTable("calendario");
                });

            modelBuilder.Entity("poc.AspNet.Core.Ioc.Entities.Equipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("equipe");
                });

            modelBuilder.Entity("poc.AspNet.Core.Ioc.Entities.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCalendario")
                        .HasColumnType("int");

                    b.Property<int>("IdOrganizador")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdCalendario");

                    b.HasIndex("IdOrganizador");

                    b.ToTable("evento");
                });

            modelBuilder.Entity("poc.AspNet.Core.Ioc.Entities.EventoConfirmacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdEvento")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEvento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("confirmacao");
                });

            modelBuilder.Entity("poc.AspNet.Core.Ioc.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DDD")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdEquipe")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Setor")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("Id");

                    b.HasIndex("IdEquipe");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("poc.AspNet.Core.Ioc.Entities.Calendario", b =>
                {
                    b.HasOne("poc.AspNet.Core.Ioc.Entities.Equipe", "Equipe")
                        .WithMany("Calendarios")
                        .HasForeignKey("IdEquipe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("poc.AspNet.Core.Ioc.Entities.Evento", b =>
                {
                    b.HasOne("poc.AspNet.Core.Ioc.Entities.Calendario", "Calendario")
                        .WithMany("Eventos")
                        .HasForeignKey("IdCalendario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("poc.AspNet.Core.Ioc.Entities.Usuario", "Organizador")
                        .WithMany("EventosOrganizados")
                        .HasForeignKey("IdOrganizador")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Calendario");

                    b.Navigation("Organizador");
                });

            modelBuilder.Entity("poc.AspNet.Core.Ioc.Entities.EventoConfirmacao", b =>
                {
                    b.HasOne("poc.AspNet.Core.Ioc.Entities.Evento", "Evento")
                        .WithMany("Confirmacoes")
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("poc.AspNet.Core.Ioc.Entities.Usuario", "Usuario")
                        .WithMany("Confirmacoes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("poc.AspNet.Core.Ioc.Entities.Usuario", b =>
                {
                    b.HasOne("poc.AspNet.Core.Ioc.Entities.Equipe", "Equipe")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdEquipe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("poc.AspNet.Core.Ioc.Entities.Calendario", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("poc.AspNet.Core.Ioc.Entities.Equipe", b =>
                {
                    b.Navigation("Calendarios");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("poc.AspNet.Core.Ioc.Entities.Evento", b =>
                {
                    b.Navigation("Confirmacoes");
                });

            modelBuilder.Entity("poc.AspNet.Core.Ioc.Entities.Usuario", b =>
                {
                    b.Navigation("Confirmacoes");

                    b.Navigation("EventosOrganizados");
                });
#pragma warning restore 612, 618
        }
    }
}
